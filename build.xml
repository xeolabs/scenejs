<project name="" basedir="." default="package">

    <property name="BUILD_MAJOR" value="0"/>
    <property name="BUILD_MINOR" value="7"/>
    <property name="BUILD_ID" value="9"/>
    <property name="PATCH_ID" value="0"/>

    <property name="LIB_DIR" location="${basedir}/lib"/>
    <property name="SRC_DIR" location="${basedir}/src"/>
    <property name="SceneJS._JS_NAME" value="scenejs.js"/>
    <property name="SceneJS._MIN_JS_NAME" value="scenejs.min.js"/>

    <property name="DIST_CONTAINER_DIR" location="${basedir}/dist"/>

    <property name="SceneJS._NAME" value="scenejs-${BUILD_MAJOR}.${BUILD_MINOR}.${BUILD_ID}.${PATCH_ID}"/>
    <property name="SceneJS._LATEST_MIN_JS_NAME" value="scenejs-latest.min.js"/>
    <property name="EXTRACTED_DIST_DIR" location="${DIST_CONTAINER_DIR}/extracted/${SceneJS._NAME}"/>


    <path id="yuicompressor.classpath">
        <fileset dir="${LIB_DIR}">
            <include name="**/yuicompressor-2.4.2.jar"/>
            <include name="**/YUIAnt.jar"/>

        </fileset>
    </path>

    <path id="jsdoc.classpath">
        <fileset dir="${LIB_DIR}">
            <include name="**/jsdoctoolkit-ant-task-1.0.2.jar"/>
            <include name="**/js.jar"/>

        </fileset>
    </path>

    <path id="sourcefiles">
        <fileset dir="${basedir}" includes="resources/license_intro.txt"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/core/core.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/core/service.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/core/message.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/debug/debugModule.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/exceptions/exceptions.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/core/math.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/core/webgl.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/core/webgl-trace.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/node/node.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/events/eventsModule.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/logging/loggingModule.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/errors/errorsModule.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/time/timeModule.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/memory/memoryModule.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/instancing/instancingModule.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/instancing/library.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/instancing/instance.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/selector/selector.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/processes/processModule.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/scene/sceneModule.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/scene/scene.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/shading/renderModule.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/renderer/rendererModule.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/renderer/renderer.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/geometry/geometryModule.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/geometry/geometry.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/geometry/objects/teapot.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/geometry/objects/cube.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/geometry/objects/sphere.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/text/vectorTextModule.js"/>
	<fileset dir="${SRC_DIR}" includes="scenejs/text/bitmapTextModule.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/text/text.js"/>

        
        <fileset dir="${SRC_DIR}" includes="scenejs/transformation/modelView/viewTransformModule.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/transformation/modelView/modelTransformModule.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/transformation/modelView/modelViewTransformModule.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/transformation/modelView/rotate.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/transformation/modelView/translate.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/transformation/modelView/scale.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/transformation/modelView/matrix.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/transformation/modelView/quaternion.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/transformation/modelView/lookAt.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/transformation/modelView/stationary.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/transformation/modelView/billboard.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/transformation/modelView/inverse.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/transformation/camera/projectionModule.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/transformation/camera/camera.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/lighting/lightingModule.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/lighting/lightSource.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/lighting/light.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/material/materialModule.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/material/material.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/highlight/highlightModule.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/highlight/highlight.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/interpolation/interpolator.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/boundary/viewFrustumModule.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/boundary/viewLocalityModule.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/boundary/boundingBox.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/boundary/boundaryModule.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/boundary/locality.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/texture/textureModule.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/texture/textureLayer.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/texture/texture.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/fog/fogModule.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/fog/fog.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/pick/pickModule.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/layer/layer.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/layer/layerModule.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/imagebuf/imageBuf.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/imagebuf/imageBufModule.js"/>
    </path>

    <target name="all" depends="archive"/>

    <target name="docs">
        <taskdef name="jsdoctoolkit" classname="uk.co.darrenhurley.ant.tasks.JsDocToolkit">
            <classpath>
                <path refid="jsdoc.classpath"/>
            </classpath>
        </taskdef>

        <jsdoctoolkit
                jsdochome="${basedir}/lib/jsdoc-toolkit/"
                template="jsdoc"
                outputdir="${basedir}/docs/">
             <fileset dir="${SRC_DIR}" includes="scenejs/core/core.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/core/service.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/core/message.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/debug/debugModule.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/exceptions/exceptions.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/core/math.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/core/webgl.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/core/webgl-trace.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/node/node.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/events/eventsModule.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/logging/loggingModule.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/errors/errorsModule.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/time/timeModule.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/memory/memoryModule.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/instancing/instancingModule.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/instancing/library.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/instancing/instance.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/selector/selector.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/processes/processModule.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/scene/sceneModule.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/scene/scene.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/shading/renderModule.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/renderer/rendererModule.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/renderer/renderer.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/geometry/geometryModule.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/geometry/geometry.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/geometry/objects/teapot.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/geometry/objects/cube.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/geometry/objects/sphere.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/text/vectorTextModule.js"/>
	<fileset dir="${SRC_DIR}" includes="scenejs/text/bitmapTextModule.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/text/text.js"/>

        
        <fileset dir="${SRC_DIR}" includes="scenejs/transformation/modelView/viewTransformModule.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/transformation/modelView/modelTransformModule.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/transformation/modelView/modelViewTransformModule.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/transformation/modelView/rotate.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/transformation/modelView/translate.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/transformation/modelView/scale.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/transformation/modelView/matrix.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/transformation/modelView/quaternion.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/transformation/modelView/lookAt.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/transformation/modelView/stationary.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/transformation/modelView/billboard.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/transformation/modelView/inverse.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/transformation/camera/projectionModule.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/transformation/camera/camera.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/lighting/lightingModule.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/lighting/lightSource.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/lighting/light.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/material/materialModule.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/material/material.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/highlight/highlightModule.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/highlight/highlight.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/interpolation/interpolator.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/boundary/viewFrustumModule.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/boundary/viewLocalityModule.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/boundary/boundingBox.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/boundary/boundaryModule.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/boundary/locality.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/texture/textureModule.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/texture/textureLayer.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/texture/texture.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/fog/fogModule.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/fog/fog.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/pick/pickModule.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/layer/layer.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/layer/layerModule.js"/>

        <fileset dir="${SRC_DIR}" includes="scenejs/imagebuf/imageBuf.js"/>
        <fileset dir="${SRC_DIR}" includes="scenejs/imagebuf/imageBufModule.js"/>
        </jsdoctoolkit>
    </target>

    <target name="archive" depends="package">
        <tar destfile="${DIST_CONTAINER_DIR}/${SceneJS._NAME}.tar.gz"
             basedir="${DIST_CONTAINER_DIR}/extracted"
             compression="gzip"/>

        <zip destfile="${DIST_CONTAINER_DIR}/${SceneJS._NAME}.zip" basedir="${DIST_CONTAINER_DIR}/extracted"/>


    </target>

    <!-- Create compressed javascript lib -->

    <!--<target name="package" depends="assemble-lib, package-index, package-examples, package-docs">-->

         <target name="package" depends="assemble-lib, package-index, package-examples, package-lib-utils">
        <!-- Compress JS file list -->

        <taskdef name="yuicompress" classname="com.yahoo.platform.yui.compressor.YUICompressTask">
            <classpath>
                <path refid="yuicompressor.classpath"/>
            </classpath>
        </taskdef>
        <yuicompress linebreak="300" warn="false" munge="no" preserveallsemicolons="true"
                     outputfolder="${EXTRACTED_DIST_DIR}">
            <fileset dir="${EXTRACTED_DIST_DIR}/lib/">
                <include name="**/*.js"/>
            </fileset>
        </yuicompress>

        <!-- Move compressed lib into temp file in lib dir -->

        <move file="${EXTRACTED_DIST_DIR}/${SceneJS._JS_NAME}"
              tofile="${EXTRACTED_DIST_DIR}/lib/${SceneJS._MIN_JS_NAME}-temp"/>

        <!-- Concat temp file to license yeilding final compressed lib file -->

        <concat fixlastline="yes" destfile="${EXTRACTED_DIST_DIR}/lib/${SceneJS._MIN_JS_NAME}">
            <path id="sourcefiles">
                <fileset dir="${basedir}" includes="resources/license_intro.txt"/>
                <fileset dir="${EXTRACTED_DIST_DIR}/lib/" includes="${SceneJS._MIN_JS_NAME}-temp"/>
            </path>
        </concat>

        <!-- Delete temp file -->

        <delete>
            <fileset dir="${EXTRACTED_DIST_DIR}/lib/" includes="*-temp" defaultexcludes="false"/>
        </delete>

    </target>

    <target name="assemble-lib" depends="create-dist-directories">
        <concat fixlastline="yes" destfile="${EXTRACTED_DIST_DIR}/lib/${SceneJS._JS_NAME}">
            <path refid="sourcefiles"/>
        </concat>       
    </target>

    <target name="package-index">
        <echo file="resources/version.txt" append="false">V${BUILD_MAJOR}.${BUILD_MINOR}.${BUILD_ID}.${PATCH_ID}
        </echo>
        <concat fixlastline="yes" destfile="${EXTRACTED_DIST_DIR}/examples/index.html">
            <filelist dir="."
                      files="${basedir}/resources/example-index-p1.html, ${basedir}/resources/version.txt, ${basedir}/resources/example-index-p2.html"/>
        </concat>

    </target>

    <target name="package-examples">
        <mkdir dir="${EXTRACTED_DIST_DIR}/examples/web"/>
        <copy todir="${EXTRACTED_DIST_DIR}/examples/web">
            <fileset dir="${basedir}/resources/web"/>
        </copy>

        <copy todir="${EXTRACTED_DIST_DIR}/examples">
            <fileset dir="${SRC_DIR}/examples"/>
        </copy>
    </target>

    <target name="package-docs" depends="docs">
        <copy todir="${EXTRACTED_DIST_DIR}/api-docs">
            <fileset dir="${basedir}/docs/"/>
        </copy>
    </target>

    <target name="package-lib-utils" depends="docs">
	<copy todir="${EXTRACTED_DIST_DIR}/lib/utils">
            <fileset dir="${basedir}/src/utils"/>
        </copy>
    </target>

    <target name="create-dist-directories">
        <mkdir dir="${DIST_CONTAINER_DIR}"></mkdir>
        <delete includeemptydirs="true">
            <fileset dir="${DIST_CONTAINER_DIR}" includes="**" defaultexcludes="false"/>
        </delete>
        <mkdir dir="${EXTRACTED_DIST_DIR}"/>
        <mkdir dir="${EXTRACTED_DIST_DIR}/lib"/>
	<mkdir dir="${EXTRACTED_DIST_DIR}/lib/utils"/>
        <mkdir dir="${EXTRACTED_DIST_DIR}/examples"/>
        <mkdir dir="${EXTRACTED_DIST_DIR}/api-docs"/>
    </target>

</project>
